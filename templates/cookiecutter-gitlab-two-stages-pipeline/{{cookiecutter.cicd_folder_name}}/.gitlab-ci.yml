variables:
  sam_template: {{cookiecutter.sam_template}}
  aws_access_key_id_: ${{cookiecutter.deployer_aws_access_key_id_variable_name}}
  aws_secret_access_key_: ${{cookiecutter.deployer_aws_secret_access_key_variable_name}}
  deployer_arn: {{cookiecutter.deployer_arn}}
  testing_stack_name: {{cookiecutter.testing_stack_name}}
  testing_region: {{cookiecutter.testing_region}}
  testing_deployer_role: {{cookiecutter.testing_pipeline_execution_role}}
  testing_cfn_deployment_role: {{cookiecutter.testing_cloudformation_execution_role}}
  testing_artifacts_bucket: {{cookiecutter.testing_artifacts_bucket}}
  testing_ecr_repo: {{cookiecutter.testing_ecr_repo}}
  prod_stack_name: {{cookiecutter.prod_stack_name}}
  prod_region: {{cookiecutter.prod_region}}
  prod_deployer_role: {{cookiecutter.prod_pipeline_execution_role}}
  prod_cfn_deployment_role: {{cookiecutter.prod_cloudformation_execution_role}}
  prod_artifacts_bucket: {{cookiecutter.prod_artifacts_bucket}}
  prod_ecr_repo: {{cookiecutter.prod_ecr_repo}}
  DOCKER_DRIVER: overlay2
  # Create the certificates inside this directory for both the server
  # and client. The certificates used by the client will be created in
  # /certs/client so we only need to share this directory with the
  # volume mount in `config.toml`.
  DOCKER_TLS_CERTDIR: "/certs"

  PIPELINE_USER_ACCESS_KEY_ID: ${{ "{{" }} secrets.{{cookiecutter.deployer_aws_access_key_id_variable_name}} {{ "}}" }}

image: docker:19.03.15

services:
    - docker:19.03.15-dind

before_script:
  - apk update
  - apk upgrade
  - apk add --update --no-cache python3
  - apk add --update py-pip
  - apk add python3-dev
  - apk add build-base
  - apk add jq
  - pip install awscli
  - pip install aws-sam-cli

stages:
  - test
  - build
  - testing
  - prod

# uncomment and modify the following step for running the unit-tests
#
#unit-test:
#  stage: test
#  only:
#    - {{cookiecutter.main_git_branch}}
#    - /^feature-.*$/
#  script: |
#    Assuming python runtime
#    pip install pytest
#    pip install -r /path/to/requirements.txt
#    python -m pytest /path/to/unit-tests

build-and-deploy-feature:
  stage: build
  only:
    - /^feature-.*$/
  script: |
    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${testing_region} \
                                                       ${testing_deployer_role} \
                                                       feature-deployment
    sam build --template ${sam_template} --use-container
    sam deploy --stack-name features-${CI_COMMIT_REF_NAME}-cfn-stack \
               --capabilities CAPABILITY_IAM \
               --region ${testing_region} \
               --s3-bucket ${testing_artifacts_bucket} \
               --image-repository ${testing_ecr_repo} \
               --no-fail-on-empty-changeset \
               --no-confirm-changeset \
               --role-arn ${testing_cfn_deployment_role}
build:
  stage: build
  only:
    - {{cookiecutter.main_git_branch}}
  script: |
    sam build --template ${sam_template} --use-container

    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${testing_region} \
                                                       ${testing_deployer_role} \
                                                       testing-stage-packaging

    sam package \
          --s3-bucket ${testing_artifacts_bucket} \
          --image-repository ${testing_ecr_repo} \
          --region ${testing_region} \
          --output-template-file packaged-testing.yaml

    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${prod_region} \
                                                       ${prod_deployer_role} \
                                                       prod-stage-packaging

    sam package \
           --s3-bucket ${prod_artifacts_bucket} \
           --image-repository ${prod_ecr_repo} \
           --region ${prod_region} \
           --output-template-file packaged-prod.yaml
  artifacts:
    paths:
      - packaged-testing.yaml
      - packaged-prod.yaml
    expire_in: 1 year

deploy-testing:
  stage: testing
  only:
    - {{cookiecutter.main_git_branch}}
  script: |
    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${testing_region} \
                                                       ${testing_deployer_role} \
                                                       testing-deployment

    sam deploy --stack-name ${testing_stack_name} \
               --template packaged-testing.yaml \
               --capabilities CAPABILITY_IAM \
               --region ${testing_region} \
               --s3-bucket ${testing_artifacts_bucket} \
               --image-repository ${testing_ecr_repo} \
               --no-fail-on-empty-changeset \
               --no-confirm-changeset \
               --role-arn ${testing_cfn_deployment_role}

deploy-prod:
  stage: prod
  # uncomment this to have a manual approval step before deployment to production
  #  when: manual
  only:
    - {{cookiecutter.main_git_branch}}
  script: |
    . {{cookiecutter.cicd_folder_name}}/assume-role.sh ${prod_region} \
                                                       ${prod_deployer_role} \
                                                       prod-deployment
    sam deploy --stack-name ${prod_stack_name} \
               --template packaged-prod.yaml \
               --capabilities CAPABILITY_IAM \
               --region ${prod_region} \
               --s3-bucket ${prod_artifacts_bucket} \
               --image-repository ${prod_ecr_repo} \
               --no-fail-on-empty-changeset \
               --no-confirm-changeset \
               --role-arn ${prod_cfn_deployment_role}
